name: main.yaml
on:
    push:
        branches:
            - main
env:
    PROJECT_ID: ${{ secrets.GKE_PROJECT }}
    GKE_CLUSTER: dwk-cluster
    GKE_REGION: europe-west4
    GKE_ZONE: europe-west4-a
    REGISTRY: europe-west4-docker.pkg.dev
    REPOSITORY: my-repository
    BRANCH: ${{ github.ref_name }}
    FRONTEND_IMAGE_TAG: europe-west4-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/frontend:${{ github.ref_name }}-${{ github.sha }}-${{ github.run_id }}
    TODO_SERVICE_IMAGE_TAG: europe-west4-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/todo-service:${{ github.ref_name }}-${{ github.sha }}-${{ github.run_id }}
    IMAGE_SERVICE_IMAGE_TAG: europe-west4-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/image-service:${{ github.ref_name }}-${{ github.sha }}-${{ github.run_id }}

jobs:
    build-publish-deploy:
        name: Build, Publish and Deploy
        runs-on: ubuntu-latest
        environment: development

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - uses: google-github-actions/auth@v2
              with:
                  credentials_json: "${{ secrets.GKE_SA_KEY }}"

            - name: "Set up Cloud SDK"
              uses: google-github-actions/setup-gcloud@v2

            - name: "Use gcloud CLI"
              run: gcloud info

            - name: "Configure Docker"
              run: gcloud auth configure-docker $REGISTRY --quiet

            - name: "Get GKE credentials"
              uses: "google-github-actions/get-gke-credentials@v2"
              with:
                  cluster_name: "${{ env.GKE_CLUSTER }}"
                  project_id: "${{ env.PROJECT_ID }}"
                  location: "${{ env.GKE_ZONE }}"

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              with:
                  platforms: linux/arm64

            - name: Build and Push Frontend Image
              uses: docker/build-push-action@v4
              with:
                  platforms: linux/arm64
                  context: ./todo-app/frontend
                  push: true
                  tags: ${{ env.FRONTEND_IMAGE_TAG }}

            - name: Build and Push Todo Service Image
              uses: docker/build-push-action@v4
              with:
                  platforms: linux/arm64
                  context: ./todo-app/todo-service
                  push: true
                  tags: ${{ env.TODO_SERVICE_IMAGE_TAG }}

            - name: Build and Push Image Service
              uses: docker/build-push-action@v4
              with:
                  platforms: linux/arm64
                  context: ./todo-app/image-service
                  push: true
                  tags: ${{ env.IMAGE_SERVICE_IMAGE_TAG }}

            - name: Set up Kustomize
              uses: imranismail/setup-kustomize@v2.1.0

            - name: Deploy
              run: |-
                  cd todo-app/manifests
                  kustomize edit set image europe-west4-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/frontend=$FRONTEND_IMAGE_TAG
                  kustomize edit set image europe-west4-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/todo-service=$TODO_SERVICE_IMAGE_TAG
                  kustomize edit set image europe-west4-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/image-service=$IMAGE_SERVICE_IMAGE_TAG
                  kustomize build . | kubectl apply -f -
                  kubectl rollout status deployment todo-app-frontend -n project
                  kubectl rollout status deployment todo-service -n project
                  kubectl rollout status deployment image-service -n project
                  kubectl get services -o wide
