name: GitOps Deploy Production

on:
  release:
    types: [ published ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-west4-a
  REGISTRY: europe-west4-docker.pkg.dev
  REPOSITORY: my-repository
  ARCHITECTURE: linux/amd64
  ENVIRONMENT: production
  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      frontend_image: ${{ steps.set_outputs.outputs.frontend_image }}
      todo_service_image: ${{ steps.set_outputs.outputs.todo_service_image }}
      image_service_image: ${{ steps.set_outputs.outputs.image_service_image }}
      broadcaster_service_image: ${{ steps.set_outputs.outputs.broadcaster_service_image }}
    steps:
      - uses: actions/checkout@v5.0.0
        with:
          ref: main
          fetch-depth: 0

      - name: Set image tags
        id: set_outputs
        run: |
          echo "frontend_image=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "todo_service_image=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/todo-service:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "image_service_image=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/image-service:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "broadcaster_service_image=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/broadcaster-service:${{ github.sha }}" >> $GITHUB_OUTPUT

      - uses: google-github-actions/auth@v3
        with:
          credentials_json: "${{ env.GKE_CREDENTIALS }}"

      - uses: google-github-actions/setup-gcloud@v3

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

      - uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: "${{ env.GKE_CLUSTER }}"
          project_id: "${{ env.PROJECT_ID }}"
          location: "${{ env.GKE_ZONE }}"


      - uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.ARCHITECTURE }}

      - name: Build & Push Images
        run: |
          docker buildx build --platform ${{ env.ARCHITECTURE }} -t ${{ steps.set_outputs.outputs.frontend_image }} --push ./todo-app/frontend
          docker buildx build --platform ${{ env.ARCHITECTURE }} -t ${{ steps.set_outputs.outputs.todo_service_image }} --push ./todo-app/backend/todo-service
          docker buildx build --platform ${{ env.ARCHITECTURE }} -t ${{ steps.set_outputs.outputs.image_service_image }} --push ./todo-app/backend/image-service
          docker buildx build --platform ${{ env.ARCHITECTURE }} -t ${{ steps.set_outputs.outputs.broadcaster_service_image }} --push ./todo-app/backend/broadcaster-service

      - uses: imranismail/setup-kustomize@v2.1.0

      - name: Deploy to Production
        run: |
          kubectl create namespace ${{ env.ENVIRONMENT }} || true
          kubectl config set-context --current --namespace=${{ env.ENVIRONMENT }}
          cd todo-app/kubernetes/overlays/production
          kustomize edit set image ${{ steps.set_outputs.outputs.frontend_image }}
          kustomize edit set image ${{ steps.set_outputs.outputs.todo_service_image }}
          kustomize edit set image ${{ steps.set_outputs.outputs.image_service_image }}
          kustomize edit set image ${{ steps.set_outputs.outputs.broadcaster_service_image }}
          kustomize build . | kubectl apply -f -
          kubectl set env deployment/broadcaster-service DISCORD_WEBHOOK_URL=${{ env.DISCORD_WEBHOOK_URL }} -n ${{ env.ENVIRONMENT }}

      - name: Commit kustomization.yaml to GitHub
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          add: "todo-app/kubernetes/overlays/production/kustomization.yaml"
          message: New version released ${{ github.sha }}
